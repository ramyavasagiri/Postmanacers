{
	"info": {
		"_postman_id": "3779c55c-cda1-477a-a847-4b94c9e4c7c0",
		"name": "PostmanHackathon_Team13",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Program",
			"item": [
				{
					"name": "Create Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7733dd2a-d1a9-4d47-973b-2a4d8a945797",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"pm.environment.set(\"program_id\",jsonData.programId)\r",
									"//pm.environment.set(\"program_desc\",jsonData.programDescription);\r",
									"pm.environment.set(\"program_name\",jsonData.programName);\r",
									"\r",
									"//pm.environment.set(\"program_status\",jsonData.programStatus);\r",
									"\r",
									"\r",
									"\r",
									"    pm.test(\"Status code is 201\", function () {\r",
									"        pm.response.to.have.status(201);\r",
									"    });\r",
									"\r",
									"pm.test(\"Validate For Program already exists\",function()\r",
									"{\r",
									"    pm.expect(jsonData.message).to.eql(\"cannot create program , since already exists\")\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"    \r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6b9a6386-8971-443e-9456-272cce761f61",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"ProgramName\"));\r",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"ProgramDescription\"));\r",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"ProgramStatus\"));\r",
									"console.log(pm.collectionVariables.get(\"prog_name\"));\r",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c7fceee0-2b98-4ba8-8325-7523f5a88e24",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{ProgramDescription}}\",\r\n  \"programName\": \"{{ProgramName}}\",\r\n  \"programStatus\": \"{{ProgramStatus}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Create Program_500: Internal Server Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7733dd2a-d1a9-4d47-973b-2a4d8a945797",
								"exec": [
									"pm.test(\"For 500 Internal server error\",function()\r",
									"{\r",
									"   pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6b9a6386-8971-443e-9456-272cce761f61",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"ProgramName\"));\r",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"ProgramDescription\"));\r",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"ProgramStatus\"));\r",
									"console.log(pm.collectionVariables.get(\"prog_name\"));\r",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a0f7c10d-80a5-474c-9841-11e225014abf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{ProgramDescription}}\",\r\n  \"programStatus\": \"{{ProgramStatus}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Negative Scenarios for Program already exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7733dd2a-d1a9-4d47-973b-2a4d8a945797",
								"exec": [
									"pm.test(\"For 400 Bad Request Invalid ProgramName\",function()\r",
									"{\r",
									"   pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6b9a6386-8971-443e-9456-272cce761f61",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"ProgramName\"));\r",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"ProgramDescription\"));\r",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"ProgramStatus\"));\r",
									"console.log(pm.collectionVariables.get(\"prog_name\"));\r",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "48a93cb8-a88f-4ce0-af6c-c21eecf26735",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{ProgramDescription}}\",\r\n  \"programName\": \"Jun23-PostmanAcers-JavaDeveloper-203\",\r\n  \"programStatus\": \"{{ProgramStatus}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "GET all Programs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22d69a44-1de9-4255-a81b-5b775cd1d08c",
								"exec": [
									"pm.test(\"Status is Success\",function()",
									"{",
									"    pm.response.to.have.status(200);  ",
									"})",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2b1078b6-a02b-400d-94ba-a91092ecde68",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/allPrograms"
					},
					"response": []
				},
				{
					"name": "GET one ProgramId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e716c8e0-e8ac-4a4c-8de2-594203827674",
								"exec": [
									"pm.test(\"Status is Success\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");  ",
									"})",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f44c86c9-2a41-4032-9921-42a45cbf7644",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/programs/{{program_id}}"
					},
					"response": []
				},
				{
					"name": "For Invalid ProgramID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e716c8e0-e8ac-4a4c-8de2-594203827674",
								"exec": [
									"pm.test(\"For Invalid ProgramId\",function()",
									"{",
									"    pm.expect(pm.response.text()).to.include(\"program with this: 2345not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7dfb3ec3-77d0-47f3-b1cd-221c385753e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/programs/:programId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"programs",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "002345"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Program_UpdateProgrambyName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6649816-507c-4591-9857-3f482b1d6a44",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"\r",
									"const ProgramNAME = jsonData.programName;\r",
									"pm.environment.set(\"program_name\",ProgramNAME)\r",
									"\r",
									"\r",
									"pm.test(\"Validate the status code is 200\",function()\r",
									"{\r",
									"    pm.response.to.have.status(\"OK\");   \r",
									"})\r",
									"pm.test(\"Invalid Program Name\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);\r",
									"      \r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(404);\r",
									"    \r",
									"\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a390ba9-7d90-4d71-81e5-ff5fc8d3ace0",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"UpdatedProgramName\"));",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"UpdatedProgramDesc\"));",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"ProgramStatus\"));",
									"console.log(pm.collectionVariables.get(\"prog_name\"));",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "12f822de-ca51-48ce-adfd-d7ad7e896992",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{UpdatedProgramDesc}}\",\r\n  \"programName\": \"{{UpdatedProgramName}}\",\r\n  \"programStatus\": \"{{ProgramStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/program/{{program_name}}"
					},
					"response": []
				},
				{
					"name": "For Invalid Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6649816-507c-4591-9857-3f482b1d6a44",
								"exec": [
									"pm.test(\"For Invalid ProgramId\",function()\r",
									"{\r",
									"    pm.expect(pm.response.text()).to.include(\"no list with such program name\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a390ba9-7d90-4d71-81e5-ff5fc8d3ace0",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"UpdatedProgramName\"));",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"UpdatedProgramDesc\"));",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"ProgramStatus\"));",
									"console.log(pm.collectionVariables.get(\"prog_name\"));",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ee1ad2ce-091e-4f9e-9ffc-9cf21dea12de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{UpdatedProgramDesc}}\",\r\n  \"programName\": \"Hardware Development\",\r\n  \"programStatus\": \"{{ProgramStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/program/{{program_name}}"
					},
					"response": []
				},
				{
					"name": "Bad Request Missing field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6649816-507c-4591-9857-3f482b1d6a44",
								"exec": [
									"pm.test(\"Validate for 400 Bad Request\",function()\r",
									"{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a390ba9-7d90-4d71-81e5-ff5fc8d3ace0",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"UpdatedProgramName\"));",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"UpdatedProgramDesc\"));",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"ProgramStatus\"));",
									"console.log(pm.collectionVariables.get(\"prog_name\"));",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8d91e864-31a1-4880-806f-195c356934fe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{UpdatedProgramDesc}}\",\r\n  \"programName\": \"{{UpdatedProgramName}}\",\r\n  \"programStatus\": \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/program/{{program_name}}"
					},
					"response": []
				},
				{
					"name": "PUT Program_Update Program by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fcc1659-ae62-450c-9196-9f96f55127a0",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.environment.set(\"program_name\",jsonData.programName);\r",
									"\r",
									"\r",
									"pm.test(\"Validate the status code is 200\",function()\r",
									"{\r",
									"    pm.response.to.have.status(\"OK\");   \r",
									"})\r",
									"pm.test(\"Invalid Program ID\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);\r",
									"      \r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(404);\r",
									"    \r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "178945e6-620b-4ea3-9207-298007ce2577",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"UpdatedProgramName\"));",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"UpdatedProgramDesc\"));",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"UpdatedProgramStatus\"));",
									"console.log(pm.collectionVariables.get(\"prog_name\"));",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "40e91da4-b458-4005-87f4-99f5ccd9db65",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{UpdatedProgramDesc}}\",\r\n  \"programId\": {{program_id}},\r\n  \"programName\": \"{{UpdatedProgramName}}\",\r\n  \"programStatus\": \"{{UpdatedProgramStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}//putprogram/{{program_id}}"
					},
					"response": []
				},
				{
					"name": "Update Program by ID_Bad Request Missing field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fcc1659-ae62-450c-9196-9f96f55127a0",
								"exec": [
									"pm.test(\"Validate for 400 Bad Request\",function()\r",
									"{\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "178945e6-620b-4ea3-9207-298007ce2577",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"UpdatedProgramName\"));",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"UpdatedProgramDesc\"));",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"UpdatedProgramStatus\"));",
									"console.log(pm.collectionVariables.get(\"prog_name\"));",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c4a90bdf-10ad-40fe-a3b8-127bb1811132",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{UpdatedProgramDesc}}\",\r\n  \"programId\": {{program_id}},\r\n  \"programName\": \"{{UpdatedProgramName}}\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}//putprogram/{{program_id}}"
					},
					"response": []
				},
				{
					"name": "For Invalid ProgramId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fcc1659-ae62-450c-9196-9f96f55127a0",
								"exec": [
									"pm.test(\"For Invalid ProgramId\",function()\r",
									"{\r",
									"    pm.expect(pm.response.text()).to.include(\"program with id32145not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "178945e6-620b-4ea3-9207-298007ce2577",
								"exec": [
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"UpdatedProgramName\"));",
									"pm.collectionVariables.set(\"prog_desc\",pm.iterationData.get(\"UpdatedProgramDesc\"));",
									"pm.collectionVariables.set(\"prog_status\",pm.iterationData.get(\"UpdatedProgramStatus\"));",
									"console.log(pm.collectionVariables.get(\"prog_name\"));",
									"console.log(pm.collectionVariables.get(\"prog_desc\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7f603d0f-e7a6-470f-9256-fe29184b22f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{UpdatedProgramDesc}}\",\r\n  \"programId\": {{program_id}},\r\n  \"programName\": \"{{UpdatedProgramName}}\",\r\n  \"programStatus\": \"{{UpdatedProgramStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}//putprogram/:programId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"",
								"putprogram",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "32145"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Program_delete By ProgramName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a36f88c-9eb0-4202-8001-6a8f958651b8",
								"exec": [
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d671c0fb-2818-474a-98c3-170d0eb88e1a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{BaseURL}}/deletebyprogname/{{program_name}}"
					},
					"response": []
				},
				{
					"name": "404_no record found with programName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a36f88c-9eb0-4202-8001-6a8f958651b8",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"No record found With ProgramName\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"no record found with programName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "421f1cf8-2803-49c3-9e60-7ee2b2a771dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/deletebyprogname/:programName",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"deletebyprogname",
								":programName"
							],
							"variable": [
								{
									"key": "programName",
									"value": "Data Analytics-001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Program_delete By ProgramID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4de85a-b25e-4c31-b566-16b2b2321eb8",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"var id = pm.environment.get(\"program_id\");\r",
									"console.log(id);\r",
									"pm.test(\"Validate For ProgramID deleted\",function()\r",
									"{\r",
									"    pm.expect(jsonData.Message).to.eql(\"Program Id-\"+ id+\"is deleted Successfully!\")\r",
									"\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0828c950-0839-486b-90ce-b19275fd7658",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{BaseURL}}/deletebyprogid/{{program_id}}"
					},
					"response": []
				},
				{
					"name": "404_no record found with programId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4de85a-b25e-4c31-b566-16b2b2321eb8",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"No record found With ProgramId\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"no record found with programId\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b378d384-82a2-4596-9abc-cd203481f2d7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/deletebyprogid/:programId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"deletebyprogid",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "67543"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "ae302d53-ae10-46b5-a2d2-aaf072b5328d"
		},
		{
			"name": "Batch",
			"item": [
				{
					"name": "Create Batch",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ad96514f-6a1d-42c3-8f14-869f7ee3b04f",
								"exec": [
									"pm.collectionVariables.set(\"batch_name\",pm.iterationData.get(\"BatchName\"));\r",
									"pm.collectionVariables.set(\"batch_status\",pm.iterationData.get(\"Batchstatus\"));\r",
									"pm.collectionVariables.set(\"noOf_classes\",pm.iterationData.get(\"NoOfClasses\"));\r",
									"pm.collectionVariables.set(\"batch_desc\",pm.iterationData.get(\"BatchDesc\"));\r",
									"pm.environment.get(\"program_id\");\r",
									"\r",
									"//const val=pm.variables.replaceIn('{{$randomInt}}');\r",
									"//pm.collectionVariables.set(\"serialNumber\",val);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "94ae5143-1426-4c6e-895a-199e7af88fb5",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"const BatchID = jsonData.batchId;\r",
									"pm.environment.set(\"batch_id\",BatchID)\r",
									"const BatchNAME = jsonData.batchName;\r",
									"pm.environment.set(\"batch_name\",BatchNAME)\r",
									"console.log(BatchNAME);\r",
									"\r",
									"\r",
									"pm.test(\"Validate the status code is 201\",function()\r",
									"{\r",
									"    pm.response.to.have.status(201);\r",
									"     pm.expect(jsonData).to.have.property(\"batchId\");\r",
									"    \r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"    \r",
									"\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "019519c3-c7ab-45e5-90c4-55d9a6f99f60",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n//Batch Name, programID , Batch status , No of Classes\r\n{\r\n  \"batchDescription\": \"{{BatchDesc}}\",\r\n  \"batchName\": \"{{BatchName}}\",\r\n  \"batchNoOfClasses\": {{NoOfClasses}},\r\n  \"batchStatus\": \"{{Batchstatus}}\",\r\n  \"programId\":{{program_id}} \r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/batches"
					},
					"response": []
				},
				{
					"name": "400 Bad Request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ad96514f-6a1d-42c3-8f14-869f7ee3b04f",
								"exec": [
									"pm.collectionVariables.set(\"batch_name\",pm.iterationData.get(\"BatchName\"));\r",
									"pm.collectionVariables.set(\"batch_status\",pm.iterationData.get(\"Batchstatus\"));\r",
									"pm.collectionVariables.set(\"noOf_classes\",pm.iterationData.get(\"NoOfClasses\"));\r",
									"pm.collectionVariables.set(\"batch_desc\",pm.iterationData.get(\"BatchDesc\"));\r",
									"pm.environment.get(\"program_id\");\r",
									"\r",
									"//const val=pm.variables.replaceIn('{{$randomInt}}');\r",
									"//pm.collectionVariables.set(\"serialNumber\",val);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "94ae5143-1426-4c6e-895a-199e7af88fb5",
								"exec": [
									"pm.test(\"For 400 Bad Request Invalid ProgramName\",function()\r",
									"{\r",
									"   pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8b386801-f0a5-4c61-8caa-01f6cb35e8e1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n//Batch Name, programID , Batch status , No of Classes\r\n{\r\n  \"batchDescription\": \"{{BatchDesc}}\",\r\n  \"batchName\": \"{{BatchName}}\",\r\n  \"batchNoOfClasses\": \"{{NoOfClasses}}\",\r\n  \"batchStatus\": \"{{Batchstatus}}\",\r\n  \"programId\":{{program_id}} \r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/batches"
					},
					"response": []
				},
				{
					"name": "Get All Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bee75ade-059f-4228-9d94-74b1291b37c7",
								"exec": [
									"pm.test(\"Validate the status code\",function()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"    \r",
									"\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "15583e89-f0dd-42e5-a36f-665dca3b539d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/batches"
					},
					"response": []
				},
				{
					"name": "Get batch by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f29ebe4-4795-4158-98ff-bd057fd5c25c",
								"exec": [
									"pm.test(\"Validate the status code\",function()",
									"{",
									"    pm.response.to.have.status(200);",
									"   ",
									"",
									"})",
									"",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"",
									"})",
									"pm.test(\"Validate For BatchId do not exist\",function()",
									"{",
									"     pm.expect(jsonData.success).to.eql(false);",
									"",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7f34e411-e971-4b00-9a28-3603ddeacdd5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/batches/batchId/{{batch_id}}"
					},
					"response": []
				},
				{
					"name": "Get batch by ID 404 – Error with message",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f29ebe4-4795-4158-98ff-bd057fd5c25c",
								"exec": [
									"",
									"pm.test(\"For Invalid BatchId\",function()",
									"{",
									"    pm.expect(pm.response.text()).to.include(\"Batch not found with Id : 123456\");",
									"});",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"",
									"})",
									"pm.test(\"Validate For BatchId do not exist\",function()",
									"{",
									"     pm.expect(jsonData.success).to.eql(false);",
									"",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "80a8ac89-ff54-46e0-9523-99f0c3e9d4bc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/batches/batchId/:batchId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"batches",
								"batchId",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "123456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get batch by Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60906034-8807-48fc-bf67-f8a854ed9e7a",
								"exec": [
									"",
									"",
									"//pm.test(\"Status code 200\", function() {",
									"     //pm.response.to.have.status(200);",
									"     //pm.expect(jsonData).to.have.property(\"batchName\");",
									"//});",
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");   ",
									"})",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c6c1f2ac-300f-4414-8534-8dde19464088",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/batches/batchName/{{batch_name}}"
					},
					"response": []
				},
				{
					"name": "Get batch by Name404 – Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60906034-8807-48fc-bf67-f8a854ed9e7a",
								"exec": [
									"pm.test(\"For Invalid ProgramName\",function()",
									"{",
									"    pm.expect(pm.response.text()).to.include(\"programBatch with idJun23-ApITesters_SDET-001not found\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "dac5bfb7-8c66-482a-a92d-82efb12eb65f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/batches/batchName/:batchName",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"batches",
								"batchName",
								":batchName"
							],
							"variable": [
								{
									"key": "batchName",
									"value": "Jun23-ApITesters_SDET-001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get batch by programId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "742f569b-14fa-45d1-8f2e-5206da649d68",
								"exec": [
									"const jsonData = pm.response.json();",
									"console.log(jsonData);",
									"",
									"",
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200);",
									"   ",
									"})",
									"",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f96bd77f-d701-492c-87bb-8eaa9f57a716",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/batches/program/{{program_id}}"
					},
					"response": []
				},
				{
					"name": "Get batch by programId 404 – Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "742f569b-14fa-45d1-8f2e-5206da649d68",
								"exec": [
									"",
									"pm.test(\"For Invalid ProgramId\",function()",
									"{",
									"    pm.expect(pm.response.text()).to.include(\"batch with this programId 23456not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fd2eb4d9-ebed-4112-8607-4566a8e90f9f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/batches/program/:programId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"batches",
								"program",
								":programId"
							],
							"variable": [
								{
									"key": "programId",
									"value": "23456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ae28e2c-5fa6-4b9c-9f13-79c940bbc352",
								"exec": [
									"const jsonData = pm.response.json();",
									"console.log(jsonData);",
									"const BatchID = jsonData.batchId;",
									"pm.environment.set(\"batch_id\",BatchID)",
									"",
									"",
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d6f030a-e539-4e03-810f-689beab2c2ef",
								"exec": [
									"pm.collectionVariables.set(\"batch_name\",pm.iterationData.get(\"UpdatedBatchName\"));",
									"pm.collectionVariables.set(\"batch_status\",pm.iterationData.get(\"UpdatedBatchStatus\"));",
									"pm.collectionVariables.set(\"noOf_classes\",pm.iterationData.get(\"NoOfClasses\"));",
									"pm.collectionVariables.set(\"batch_desc\",pm.iterationData.get(\"UpdatedBatchDesc\"));",
									"pm.environment.get(\"batch_id\");",
									"pm.environment.get(\"program_id\");",
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"ProgramName\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e12ecdbd-fe4d-4bef-8b7e-73ec00b79995",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"batchDescription\": \"{{UpdatedBatchDesc}}\",\n  \"batchId\":  {{batch_id}},\n  \"batchName\": \"{{UpdatedBatchName}}\",\n  \"batchNoOfClasses\":{{NoOfClasses}},\n  \"batchStatus\": \"{{UpdatedBatchStatus}}\",\n  \"programId\": {{program_id}},\n  \"programName\": \"{{program_name}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/batches/{{batch_id}}"
					},
					"response": []
				},
				{
					"name": "update batch_400 : Bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ae28e2c-5fa6-4b9c-9f13-79c940bbc352",
								"exec": [
									"pm.test(\"Validate for 400 Bad Request\",function()",
									"{",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d6f030a-e539-4e03-810f-689beab2c2ef",
								"exec": [
									"pm.collectionVariables.set(\"batch_name\",pm.iterationData.get(\"UpdatedBatchName\"));",
									"pm.collectionVariables.set(\"batch_status\",pm.iterationData.get(\"UpdatedBatchStatus\"));",
									"pm.collectionVariables.set(\"noOf_classes\",pm.iterationData.get(\"NoOfClasses\"));",
									"pm.collectionVariables.set(\"batch_desc\",pm.iterationData.get(\"UpdatedBatchDesc\"));",
									"pm.environment.get(\"batch_id\");",
									"pm.environment.get(\"program_id\");",
									"pm.collectionVariables.set(\"prog_name\",pm.iterationData.get(\"ProgramName\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f6ab07ed-239b-46ed-9064-540b69dc1738",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"batchDescription\": \"{{UpdatedBatchDesc}}\",\n  \"batchId\":  {{batch_id}},\n  \"batchName\": \"{{UpdatedBatchName}}\",\n  \"batchNoOfClasses\":{{NoOfClasses}},\n  \"batchStatus\": \"{{UpdatedBatchStatus}}\",\n  \"programId\": {{program_id}},\n  \"programName\": \"{{program_name}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/batches/:batchId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"batches",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6caaa428-a9e0-4148-be02-5c94459e13b2",
								"exec": [
									"pm.test(\"Status code 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "53e211ab-38df-451c-914f-b76454a3124f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{BaseURL}}/batches/{{batch_id}}"
					},
					"response": []
				},
				{
					"name": "Delete batch_404 Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6caaa428-a9e0-4148-be02-5c94459e13b2",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"No record found With ProgramId\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"no record found with programId\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0b308503-72b5-4096-95bc-29ce0ee9bc47",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/batches/:batchId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"batches",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "0101010101"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "71f21002-96ce-454b-aa39-adfc798ffb29"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1233a6bf-c00d-4878-b27a-c3480ce84949",
								"exec": [
									"pm.collectionVariables.set(\"user_FirstName\",pm.iterationData.get(\"FirstName\"));",
									"pm.collectionVariables.set(\"user_LastName\",pm.iterationData.get(\"Last_Name\"));",
									"pm.collectionVariables.set(\"Role_Id\",pm.iterationData.get(\"RoleId\"));",
									"//pm.collectionVariables.set(\"Phone_Number\",pm.iterationData.get(\"PhoneNumber\"));",
									"pm.environment.set(\"PhoneNumber\", [1000000000 + Math.floor(Math.random() * 8999999999)]);",
									"pm.collectionVariables.set(\"user_RoleStatus\",pm.iterationData.get(\"RoleStatus\"));",
									"pm.collectionVariables.set(\"user_TimeZone\",pm.iterationData.get(\"TimeZone\"));",
									"pm.collectionVariables.set(\"user_VisaStatus\",pm.iterationData.get(\"VisaStatus\"));",
									"pm.collectionVariables.set(\"user_EduPg\",pm.iterationData.get(\"EduPg\"));",
									"pm.collectionVariables.set(\"user_EduUg\",pm.iterationData.get(\"EduUg\"));",
									"",
									"console.log(pm.collectionVariables.get(\"user_FirstName\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "597da58e-c384-438f-8515-571f18f1dcbb",
								"exec": [
									"const jsonData = pm.response.json();",
									"console.log(jsonData);",
									"var reqBody = JSON.parse(pm.request.body);",
									"var phNo = reqBody.userPhoneNumber;",
									"const userId = jsonData.userId;",
									"pm.environment.set(\"user_id\",userId);",
									"const rid=pm.collectionVariables.get(\"Role_Id\");",
									"",
									"pm.environment.set(`user_idr-${pm.info.iteration + 1}`, JSON.stringify(jsonData.userId))",
									"",
									"",
									"",
									"",
									"",
									"pm.test(\"Validate the status code is 201\",function()",
									"{",
									"    pm.response.to.have.status(201);",
									"    pm.expect(jsonData).to.have.property(\"userFirstName\");",
									"});",
									"",
									"pm.test(\"400 Bad Request\", function () ",
									"{",
									"    pm.response.to.have.status(400);",
									"    ",
									"});",
									"",
									"pm.test(\"Phone number already exists\", function () ",
									"{",
									"    pm.expect(jsonData.message).contains(\"Failed to create new User as phone number \" + phNo + \" already exists !!\");",
									"});",
									"",
									"pm.test(\"Invalid Timezone\",function()",
									"{",
									"    pm.expect(jsonData.message).to.eql(\"Failed to create user, as 'TimeZone' is invalid !! \");",
									"});",
									"",
									"pm.test(\"Invalid Role Id\",function()",
									"{",
									"    pm.expect(jsonData.message).to.eql(\"Role Id is mandatory\");",
									"});",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4a71fb62-18fc-4397-8775-80bbbb6f2497",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"userComments\": \"{{$randomPhrase}}\",\n\"userEduPg\": \"{{EduPg}}\",\n\"userEduUg\": \"{{EduUg}}\",\n\"userFirstName\": \"{{FirstName}}\",\n\"userLastName\": \"{{Last_Name}}\",\n\"userLinkedinUrl\": \"{{$randomUrl}}\",\n\"userLocation\": \"{{$randomCity}}\",\n\"userMiddleName\": \"{{$randomDomainWord}}\",\n\"userPhoneNumber\": {{PhoneNumber}},\n\"userRoleMaps\": [\n{\n\"roleId\": \"{{RoleId}}\",\n\"userRoleStatus\": \"{{RoleStatus}}\"\n}\n],\n\"userTimeZone\": \"{{TimeZone}}\",\n\"userVisaStatus\": \"{{VisaStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/users/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "Create User -400 Bad request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1233a6bf-c00d-4878-b27a-c3480ce84949",
								"exec": [
									"pm.collectionVariables.set(\"user_FirstName\",pm.iterationData.get(\"FirstName\"));",
									"pm.collectionVariables.set(\"user_LastName\",pm.iterationData.get(\"Last_Name\"));",
									"pm.collectionVariables.set(\"Role_Id\",pm.iterationData.get(\"RoleId\"));",
									"//pm.collectionVariables.set(\"Phone_Number\",pm.iterationData.get(\"PhoneNumber\"));",
									"pm.environment.set(\"PhoneNumber\", [1000000000 + Math.floor(Math.random() * 8999999999)]);",
									"pm.collectionVariables.set(\"user_RoleStatus\",pm.iterationData.get(\"RoleStatus\"));",
									"pm.collectionVariables.set(\"user_TimeZone\",pm.iterationData.get(\"TimeZone\"));",
									"pm.collectionVariables.set(\"user_VisaStatus\",pm.iterationData.get(\"VisaStatus\"));",
									"pm.collectionVariables.set(\"user_EduPg\",pm.iterationData.get(\"EduPg\"));",
									"pm.collectionVariables.set(\"user_EduUg\",pm.iterationData.get(\"EduUg\"));",
									"",
									"console.log(pm.collectionVariables.get(\"user_FirstName\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "597da58e-c384-438f-8515-571f18f1dcbb",
								"exec": [
									"pm.test(\"For 400 Bad Request failed to create new user\",function()",
									"{",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0e3fd55b-6334-4b01-be59-c182952bd70e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"userComments\": \"{{$randomPhrase}}\",\n\"userEduPg\": \"{{EduPg}}\",\n\"userEduUg\": \"{{EduUg}}\",\n\"userFirstName\": \"{{FirstName}}\",\n\"userLastName\": \"{{Last_Name}}\",\n\"userLinkedinUrl\": \"{{$randomUrl}}\",\n\"userLocation\": \"{{$randomCity}}\",\n\"userMiddleName\": \"{{$randomDomainWord}}\",\n\"userPhoneNumber\": {{PhoneNumber}},\n\"userRoleMaps\": [\n{\n\"roleId\": \"{{RoleId}}\",\n\"userRoleStatus\": \"{{RoleStatus}}\"\n}\n],\n\"userTimeZone\": \"{{}}\",\n\"userVisaStatus\": \"{{VisaStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/users/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "658655a4-115a-45f2-b2e2-65f7f7564dec",
								"exec": [
									"pm.test(\"Status is Success\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");  ",
									"})",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(404);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e06d1d84-0482-492b-b20e-142175f2120c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/users/users"
					},
					"response": []
				},
				{
					"name": "User info by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "816751ba-c4c6-4a31-987f-6bad9b8850fd",
								"exec": [
									"",
									"",
									"pm.test(\"Status is Success\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");  ",
									"})",
									"",
									"pm.test(\"User id not found\",function()",
									"{",
									"    pm.response.to.have.status(404);  ",
									"})",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(404);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8f46954f-0055-46ec-80e5-bbf209613589",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/users/users/{{user_id}}"
					},
					"response": [
						{
							"id": "c0223e5a-0cdb-4676-b946-10340cfc4dd9",
							"name": "User info by Id- Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{BaseURL}}/users/users/{{user_id}}"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 28 Jun 2023 04:08:34 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"User Id null not found\",\n    \"success\": false\n}"
						},
						{
							"id": "e6626219-6ef0-442f-9d08-e660dd35cde7",
							"name": "User info by Id - Sucess",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{BaseURL}}/users/users/{{user_id}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 28 Jun 2023 05:11:07 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"userRoleId\": 4304,\n        \"user\": {\n            \"userId\": \"U4216\",\n            \"userFirstName\": \"PostmanAcers_003\",\n            \"userLastName\": \"Smith\",\n            \"userMiddleName\": \"ambrose\",\n            \"userPhoneNumber\": 5993392409,\n            \"userLocation\": \"Port Mustafa\",\n            \"userTimeZone\": \"CST\",\n            \"userLinkedinUrl\": \"https://chadd.biz\",\n            \"userEduUg\": \"BE\",\n            \"userEduPg\": \"ME\",\n            \"userComments\": \"If we index the matrix, we can get to the USB circuit through the cross-platform JBOD alarm!\",\n            \"userVisaStatus\": \"Canada-EAD\"\n        },\n        \"role\": {\n            \"roleId\": \"R03\",\n            \"roleName\": \"ROLE_STUDENT\",\n            \"roleDesc\": \"LMS_STUDENT\",\n            \"creationTime\": null,\n            \"lastModTime\": null,\n            \"hibernateLazyInitializer\": {}\n        },\n        \"batches\": [],\n        \"userRoleStatus\": \"Active\"\n    }\n]"
						}
					]
				},
				{
					"name": "User info by Id _404 Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "816751ba-c4c6-4a31-987f-6bad9b8850fd",
								"exec": [
									"pm.test(\"User id not found\",function()",
									"{",
									"    pm.response.to.have.status(404);  ",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c482a33d-1351-48e7-af79-eca1eb9ce536",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/users/users/:userId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"users",
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "U234"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users with roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d6610cb-c1b0-47e9-97d6-2e8e3105c494",
								"exec": [
									"pm.test(\"Status is Success\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");  ",
									"})",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6010d0bd-1cff-403b-97c5-292fe9fe6b8b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/users/users/roles"
					},
					"response": []
				},
				{
					"name": "Get All Staff",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95f1233e-8feb-44f9-ad38-6dcb2806991f",
								"exec": [
									"pm.test(\"Validate the status code\",function()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cf7797b6-e4b6-40f0-ba1e-c43d3d94758c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/users/users/getAllStaff"
					},
					"response": []
				},
				{
					"name": "PUT Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94db47b8-edfc-4fa9-9fd5-537af5eaffd5",
								"exec": [
									"const jsonData = pm.response.json();",
									"console.log(jsonData);",
									"//const userId = jsonData.userId;",
									"//pm.environment.set(\"user_id\",userId);",
									"",
									"",
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");   ",
									"})",
									"pm.test(\"Invalid User ID\",function()",
									"{",
									"    pm.response.to.have.status(404);",
									"      ",
									"})",
									"",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"",
									"       ",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "631b9107-5319-4810-84bc-0e01435e6fc8",
								"exec": [
									"pm.collectionVariables.set(\"user_FirstName\",pm.iterationData.get(\"FirstName\"));",
									"pm.collectionVariables.set(\"user_LastName\",pm.iterationData.get(\"Last_Name\"));",
									"//pm.collectionVariables.set(\"user_PhoneNumber\",pm.iterationData.get(\"PhoneNumber\"));",
									"pm.environment.set(\"UpdatedPhoneNumber\", [1000000000 + Math.floor(Math.random() * 8999999999)]);",
									"pm.collectionVariables.set(\"user_TimeZone\",pm.iterationData.get(\"UpdatedTimeZone\"));",
									"pm.collectionVariables.set(\"user_VisaStatus\",pm.iterationData.get(\"VisaStatus\"));",
									"pm.collectionVariables.set(\"user_EduPg\",pm.iterationData.get(\"EduPg\"));",
									"pm.collectionVariables.set(\"user_EduUg\",pm.iterationData.get(\"EduUg\"));",
									"",
									"console.log(pm.collectionVariables.get(\"user_FirstName\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4907ad72-8ac5-494e-8fde-b8eec65d9368",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{$randomPhrase}}\",\n  \"userEduPg\": \"{{EduPg}}|\",\n  \"userEduUg\": \"{{EduUg}}\",\n  \"userFirstName\": \"{{FirstName}}\",\n  \"userId\": \"{{user_id}}\",\n  \"userLastName\": \"{{Last_Name}}\",\n  \"userLinkedinUrl\": \"{{$randomUrl}}\",\n  \"userLocation\": \"{{$randomCity}}\",\n \n  \"userPhoneNumber\": {{UpdatedPhoneNumber}},\n  \"userTimeZone\": \"{{UpdatedTimeZone}}\",\n\"userVisaStatus\": \"{{VisaStatus}}\"\n}\n\n\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/users/users/{{user_id}}"
					},
					"response": []
				},
				{
					"name": "PUT Update User _400  Bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94db47b8-edfc-4fa9-9fd5-537af5eaffd5",
								"exec": [
									"pm.test(\"Validate for 400 Bad Request\",function()",
									"{",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "631b9107-5319-4810-84bc-0e01435e6fc8",
								"exec": [
									"pm.collectionVariables.set(\"user_FirstName\",pm.iterationData.get(\"FirstName\"));",
									"pm.collectionVariables.set(\"user_LastName\",pm.iterationData.get(\"Last_Name\"));",
									"//pm.collectionVariables.set(\"user_PhoneNumber\",pm.iterationData.get(\"PhoneNumber\"));",
									"pm.environment.set(\"UpdatedPhoneNumber\", [1000000000 + Math.floor(Math.random() * 8999999999)]);",
									"pm.collectionVariables.set(\"user_TimeZone\",pm.iterationData.get(\"UpdatedTimeZone\"));",
									"pm.collectionVariables.set(\"user_VisaStatus\",pm.iterationData.get(\"VisaStatus\"));",
									"pm.collectionVariables.set(\"user_EduPg\",pm.iterationData.get(\"EduPg\"));",
									"pm.collectionVariables.set(\"user_EduUg\",pm.iterationData.get(\"EduUg\"));",
									"",
									"console.log(pm.collectionVariables.get(\"user_FirstName\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "14aefb79-acdd-4b8a-b026-7a7a860d7a45",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{$randomPhrase}}\",\n  \"userEduPg\": ,\n  \"userEduUg\": \"{{EduUg}}\",\n  \"userFirstName\": \"{{FirstName}}\",\n  \"userId\": \"{{user_id}}\",\n  \"userLastName\": \"{{Last_Name}}\",\n  \"userLinkedinUrl\": \"{{$randomUrl}}\",\n  \"userLocation\": \"{{$randomCity}}\",\n \n  \"userPhoneNumber\": {{UpdatedPhoneNumber}},\n  \"userTimeZone\": \"{{UpdatedTimeZone}}\",\n\"userVisaStatus\": \"{{VisaStatus}}\"\n}\n\n\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/users/users/:userId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"users",
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "U456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update User Role Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6497630b-48ea-439e-a8c2-3c2f12d2a967",
								"exec": [
									"//pm.collectionVariables.set(\"Role_Id\",pm.iterationData.get(\"RoleId\"));",
									"pm.collectionVariables.set(\"Role_status\",pm.iterationData.get(\"UpdatedRoleStatus\"));",
									"",
									"console.log(pm.collectionVariables.get(\"user_FirstName\"));",
									"console.log(pm.collectionVariables.get(\"Role_Id\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d8699106-5299-466f-b2c2-d07e1519c829",
								"exec": [
									"",
									"",
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");   ",
									"})",
									"pm.test(\"Invalid User ID\",function()",
									"{",
									"    pm.response.to.have.status(404);",
									"      ",
									"})",
									"",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(404);",
									"    ",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f6980d06-e2ad-4ce1-b9f4-649dcf52aac6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": \"{{Role_Id}}\",\n  \"userRoleStatus\": \"{{UpdatedRoleStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/users/users/roleStatus/{{user_id}}"
					},
					"response": []
				},
				{
					"name": "PUT Update User Role Statts_404 Not found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6497630b-48ea-439e-a8c2-3c2f12d2a967",
								"exec": [
									"//pm.collectionVariables.set(\"Role_Id\",pm.iterationData.get(\"RoleId\"));",
									"pm.collectionVariables.set(\"Role_status\",pm.iterationData.get(\"UpdatedRoleStatus\"));",
									"",
									"console.log(pm.collectionVariables.get(\"user_FirstName\"));",
									"console.log(pm.collectionVariables.get(\"Role_Id\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d8699106-5299-466f-b2c2-d07e1519c829",
								"exec": [
									"pm.test(\"Invalid User ID\",function()",
									"{",
									"    pm.response.to.have.status(404);",
									"      ",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "897e7d95-85f0-4711-aa05-dcb26f7a917b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": \"{{Role_Id}}\",\n  \"userRoleStatus\": \"{{UpdatedRoleStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/users/users/roleStatus/:userId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"users",
								"users",
								"roleStatus",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "U100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Assign Update User Role Program Batch Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a456e711-62cf-4a17-a41b-2918ba456ccd",
								"exec": [
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"    ",
									"",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6d6e76f6-8571-42a7-95e0-d26cc0b3b822",
								"exec": [
									"pm.environment.get(\"program_id\");",
									"pm.environment.get(\"batch_id\");",
									"pm.environment.get(\"user_id\");",
									"pm.collectionVariables.get(\"Role_Id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "890f665b-bd95-4bf9-a8b8-358966232cde",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\": \"{{program_id}}\",\n  \"roleId\": \"{{Role_Id}}\",\n  \"userId\":  \"{{user_id}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\": \"{{batch_id}}\",\n      \"userRoleProgramBatchStatus\": \"Active\"\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/users/users/roleProgramBatchStatus/{{user_id}}"
					},
					"response": []
				},
				{
					"name": "PUT Assign Update User Role Program Batch Status _404 Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a456e711-62cf-4a17-a41b-2918ba456ccd",
								"exec": [
									"pm.test(\"Invalid User ID\",function()",
									"{",
									"    pm.response.to.have.status(404);",
									"      ",
									"})",
									"pm.test(\"Validate for 400 Bad Request\",function()",
									"{",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6d6e76f6-8571-42a7-95e0-d26cc0b3b822",
								"exec": [
									"//pm.environment.get(\"program_id\");",
									"//pm.environment.get(\"batch_id\");",
									"//pm.environment.get(\"user_id\");",
									"pm.collectionVariables.get(\"Role_Id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "192c49dd-7994-4e15-bfbd-7a1ffb05b6a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\": \"{{program_id}}\",\n  \"roleId\": \"{{Role_Id}}\",\n  \"userId\":  \"{{user_id}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\": \"{{batch_id}}\",\n      \"userRoleProgramBatchStatus\": \"Active\"\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/users/users/roleProgramBatchStatus/:userId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"users",
								"users",
								"roleProgramBatchStatus",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "U675"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f65ea6ee-3693-48f1-ad05-c64a09fe9cdc",
								"exec": [
									"",
									"",
									"pm.test(\"Status is Success\",function()",
									"{",
									"    pm.response.to.have.status(\"OK\");  ",
									"})",
									"",
									"pm.test(\"User id not found\",function()",
									"{",
									"    pm.response.to.have.status(404);  ",
									"})",
									"",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()",
									"{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
									"    pm.expect(pm.response.responseTime).to.be.below(800);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d41fa7ca-593c-4125-9b2c-163a6b9118c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{BaseURL}}/users/users/{{user_id}}"
					},
					"response": []
				}
			],
			"id": "1359e585-7ff7-4d4a-a320-6ba462d34b84"
		},
		{
			"name": "Assignment",
			"item": [
				{
					"name": "Create Assignment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "286dee84-3629-4c57-814f-38bc6a40acdc",
								"exec": [
									"pm.collectionVariables.set(\"assignmentdescription\",pm.iterationData.get(\"AssignmentDesc\"));\r",
									"pm.collectionVariables.set(\"assignment_name\",pm.iterationData.get(\"AssignmentName\"));\r",
									"pm.collectionVariables.get(\"batch_id\");\r",
									"pm.collectionVariables.get(\"user_id\");\r",
									"/*pm.environment.get(\"admin_id\")\r",
									"pm.environment.get(\"staff_id\")\r",
									"pm.environment.get(\"student_id\")*/\r",
									"\r",
									"pm.collectionVariables.set(\"comments\",pm.iterationData.get(\"Comments\"));\r",
									"\r",
									"\r",
									"var moment = require('moment');\r",
									"pm.environment.set(\"due_date\", moment.utc().subtract(2, 'days').toJSON());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"path1\",pm.iterationData.get(\"AssignmentDoc1\"));\r",
									"pm.collectionVariables.set(\"path2\",pm.iterationData.get(\"AssignmentDoc2\"));\r",
									"pm.collectionVariables.set(\"path3\",pm.iterationData.get(\"AssignmentDoc3\"));\r",
									"pm.collectionVariables.set(\"path4\",pm.iterationData.get(\"AssignmentDoc4\"));\r",
									"pm.collectionVariables.set(\"path5\",pm.iterationData.get(\"AssignmentDoc5\"));\r",
									"\r",
									"Createdby_ids = [\"{{admin_id}}\", \"{{staff_id}}\"];\r",
									"pm.environment.set(\"Createdby\", Createdby_ids[Math.floor(Math.random() * Createdby_ids.length)]);\r",
									"\r",
									"Graderids = [\"{{admin_id}}\", \"{{staff_id}}\", \"{{student_id}}\"];\r",
									"pm.environment.set(\"Graderid\", Graderids[Math.floor(Math.random() * Graderids.length)]);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ead0f046-5f65-47b4-89db-234d51674afc",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"const assignment_Id = jsonData.assignmentId;\r",
									"pm.environment.set(\"assignment_id\",assignment_Id);\r",
									"\r",
									"\r",
									"pm.test(\"Validate the status code is 201\",function()\r",
									"{\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"400 Bad Request\", function () \r",
									"{\r",
									"    pm.response.to.have.status(400);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"    \r",
									"\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2bf57d83-ce25-4b8c-98c2-5723e894c524",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assignmentDescription\": \"{{AssignmentDesc}}\",\n  \"assignmentId\": 0,\n  \"assignmentName\": \"{{AssignmentName}}{{$randomInt}}\",\n  \"batchId\": {{batch_id}},\n  \"comments\": \"{{Comments}}\",\n  \"createdBy\": \"U3204\",\n  \"dueDate\": \"{{due_date}}\",\n  \"graderId\": \"U3204\",\n  \"pathAttachment1\": \"{{AssignmentDoc1}}\",\n  \"pathAttachment2\": \"{{AssignmentDoc2}}\",\n  \"pathAttachment3\": \"{{AssignmentDoc3}}\",\n  \"pathAttachment4\": \"{{AssignmentDoc4}}\",\n  \"pathAttachment5\": \"{{AssignmentDoc5}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/assignments"
					},
					"response": []
				},
				{
					"name": "Create Assignment_400 Bad Request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "286dee84-3629-4c57-814f-38bc6a40acdc",
								"exec": [
									"pm.collectionVariables.set(\"assignmentdescription\",pm.iterationData.get(\"AssignmentDesc\"));\r",
									"pm.collectionVariables.set(\"assignment_name\",pm.iterationData.get(\"AssignmentName\"));\r",
									"pm.collectionVariables.get(\"batch_id\");\r",
									"pm.collectionVariables.get(\"user_id\");\r",
									"/*pm.environment.get(\"admin_id\")\r",
									"pm.environment.get(\"staff_id\")\r",
									"pm.environment.get(\"student_id\")*/\r",
									"\r",
									"pm.collectionVariables.set(\"comments\",pm.iterationData.get(\"Comments\"));\r",
									"\r",
									"\r",
									"var moment = require('moment');\r",
									"pm.environment.set(\"due_date\", moment.utc().subtract(2, 'days').toJSON());\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"path1\",pm.iterationData.get(\"AssignmentDoc1\"));\r",
									"pm.collectionVariables.set(\"path2\",pm.iterationData.get(\"AssignmentDoc2\"));\r",
									"pm.collectionVariables.set(\"path3\",pm.iterationData.get(\"AssignmentDoc3\"));\r",
									"pm.collectionVariables.set(\"path4\",pm.iterationData.get(\"AssignmentDoc4\"));\r",
									"pm.collectionVariables.set(\"path5\",pm.iterationData.get(\"AssignmentDoc5\"));\r",
									"\r",
									"Createdby_ids = [\"{{admin_id}}\", \"{{staff_id}}\"];\r",
									"pm.environment.set(\"Createdby\", Createdby_ids[Math.floor(Math.random() * Createdby_ids.length)]);\r",
									"\r",
									"Graderids = [\"{{admin_id}}\", \"{{staff_id}}\", \"{{student_id}}\"];\r",
									"pm.environment.set(\"Graderid\", Graderids[Math.floor(Math.random() * Graderids.length)]);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ead0f046-5f65-47b4-89db-234d51674afc",
								"exec": [
									"pm.test(\"For 400 Bad Request Invalid ProgramName\",function()\r",
									"{\r",
									"   pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"    \r",
									"\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2edc0c58-832f-4b76-bfff-7cc29a2ac231",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assignmentDescription\": \"{{AssignmentDesc}}\",\n  \"assignmentId\": 0,\n  \"assignmentName\": \"{{AssignmentName}}{{$randomInt}}\",\n  \"comments\": \"{{Comments}}\",\n  \"createdBy\": \"U3204\",\n  \"dueDate\": \"{{due_date}}\",\n  \"graderId\": \"U3204\",\n  \"pathAttachment1\": \"{{AssignmentDoc1}}\",\n  \"pathAttachment2\": \"{{AssignmentDoc2}}\",\n  \"pathAttachment3\": \"{{AssignmentDoc3}}\",\n  \"pathAttachment4\": \"{{AssignmentDoc4}}\",\n  \"pathAttachment5\": \"{{AssignmentDoc5}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/assignments"
					},
					"response": []
				},
				{
					"name": "Get All Assignments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4dcb0f44-7743-47cc-9c89-ff86f7bfbd53",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Validate the status code is 200\",function()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"     \r",
									"});\r",
									"pm.test(\"Content-Type header is present\", () => {\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"});\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Test data type of the response\", () => {\r",
									"    pm.expect(jsonData.assignmentId).to.be.a(\"undefined\");\r",
									"    pm.expect(jsonData.assignmentName).to.be.an(\"undefined\");\r",
									" });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5d8ffb84-0e38-4781-bc4c-36e63bfa78b4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignments"
					},
					"response": []
				},
				{
					"name": "Get by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8672f3e6-8c71-45e7-9a21-562404c96094",
								"exec": [
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200);",
									"     ",
									"});",
									"",
									"pm.test(\"Assignment id not found\",function()",
									"{",
									"    pm.response.to.have.status(404);  ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0cf4ca32-d143-4bcb-a25d-5342741fa3ea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignments/{{assignment_id}}"
					},
					"response": []
				},
				{
					"name": "Get by ID_404 Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8672f3e6-8c71-45e7-9a21-562404c96094",
								"exec": [
									"",
									"pm.test(\"Assignment id not found\",function()",
									"{",
									"    pm.response.to.have.status(404);  ",
									"})",
									"pm.test(\"For Invalid AssignmentId\",function()",
									"{",
									"    pm.expect(pm.response.text()).to.include(\"Assignment not found with Id : 1010101\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f2e9cf98-59f8-4e57-9564-a3b8565bca42",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignments/:assignmentId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignments",
								":assignmentId"
							],
							"variable": [
								{
									"key": "assignmentId",
									"value": "01010101"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assignment for Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5d2ac27-6051-4668-b0ed-3b79732dce57",
								"exec": [
									"pm.test(\"Validate the status code is 200\",function()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"})\r",
									"\r",
									"pm.test(\"Batch id not found\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);  \r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "277630f9-e98c-4b85-b202-c2ebc48eeac0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ca8e849b-4884-455b-8b04-441b48cc35a1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignments/batch/{{batch_id}}"
					},
					"response": []
				},
				{
					"name": "Get Assignment for Batch_404 Not Found_If batch id present and  no assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5d2ac27-6051-4668-b0ed-3b79732dce57",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Batch id not found\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);  \r",
									"})\r",
									"pm.test(\"For valid BatchId\",function()\r",
									"{\r",
									"    pm.expect(pm.response.text()).to.include(\"Assignments not found with BatchId : 4263\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "277630f9-e98c-4b85-b202-c2ebc48eeac0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ed2e9f3d-7b02-4393-9562-cecf5a1b8022",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignments/batch/:batchId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignments",
								"batch",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "4263"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assignment for Batch_404 Not Found_If batch Id is invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5d2ac27-6051-4668-b0ed-3b79732dce57",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Batch id not found\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);  \r",
									"})\r",
									"pm.test(\"For Invalid BatchId\",function()\r",
									"{\r",
									"    pm.expect(pm.response.text()).to.include(\"Batch not found with Id : 1010101\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "277630f9-e98c-4b85-b202-c2ebc48eeac0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b0044fb1-98c2-450d-a3a3-1354aa27dd31",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignments/batch/:batchId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignments",
								"batch",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "01010101"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateAssignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8657d44-9320-458c-8f3c-f4ba867bdf45",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Validate the status code is 200\",function()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"     \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"    \r",
									"\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d87b17ec-3e54-4f2a-8ceb-52a62686b19f",
								"exec": [
									"pm.collectionVariables.set(\"assignmentdescription\",pm.iterationData.get(\"AssignmentDesc\"));",
									"pm.collectionVariables.set(\"assignment_name\",pm.iterationData.get(\"AssignmentName\"));",
									"pm.collectionVariables.get(\"batch_id\");",
									"pm.collectionVariables.get(\"user_id\");",
									"pm.environment.get(\"admin_id\")",
									"pm.environment.get(\"staff_id\")",
									"pm.environment.get(\"student_id\")",
									"",
									"pm.collectionVariables.set(\"comments\",pm.iterationData.get(\"Comments\"));",
									"pm.collectionVariables.set(\"path1\",pm.iterationData.get(\"AssignmentDoc1\"));",
									"pm.collectionVariables.set(\"path2\",pm.iterationData.get(\"AssignmentDoc2\"));",
									"pm.collectionVariables.set(\"path3\",pm.iterationData.get(\"AssignmentDoc3\"));",
									"pm.collectionVariables.set(\"path4\",pm.iterationData.get(\"AssignmentDoc4\"));",
									"pm.collectionVariables.set(\"path5\",pm.iterationData.get(\"AssignmentDoc5\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8360c376-375c-4fb6-bfa9-c199885f7754",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assignmentDescription\": \"{{AssignmentDesc}}\",\n  \"assignmentId\": {{assignment_id}},\n \"assignmentName\": \"{{AssignmentName}}\",\n  \"batchId\": {{batch_id}},\n  \"comments\": \"{{Comments}}\",\n  \"createdBy\": \"U3204\",\n  \"dueDate\": \"{{$isoTimestamp}}\",\n  \"graderId\": \"U2401\",\n  \"pathAttachment1\": \"{{AssignmentDoc1}}\",\n  \"pathAttachment2\": \"{{AssignmentDoc2}}\",\n  \"pathAttachment3\": \"{{AssignmentDoc3}}\",\n  \"pathAttachment4\": \"{{AssignmentDoc4}}\",\n  \"pathAttachment5\": \"{{AssignmentDoc5}}\"\n   }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/assignments/{{assignment_id}}"
					},
					"response": []
				},
				{
					"name": "UpdateAssignment_400 Bad Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8657d44-9320-458c-8f3c-f4ba867bdf45",
								"exec": [
									"pm.test(\"Validate for 400 Bad Request\",function()\r",
									"{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"For Missing Field\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Batch ID is mandatory\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d87b17ec-3e54-4f2a-8ceb-52a62686b19f",
								"exec": [
									"pm.collectionVariables.set(\"assignmentdescription\",pm.iterationData.get(\"AssignmentDesc\"));",
									"pm.collectionVariables.set(\"assignment_name\",pm.iterationData.get(\"AssignmentName\"));",
									"pm.collectionVariables.get(\"batch_id\");",
									"pm.collectionVariables.get(\"user_id\");",
									"pm.environment.get(\"admin_id\")",
									"pm.environment.get(\"staff_id\")",
									"pm.environment.get(\"student_id\")",
									"",
									"pm.collectionVariables.set(\"comments\",pm.iterationData.get(\"Comments\"));",
									"pm.collectionVariables.set(\"path1\",pm.iterationData.get(\"AssignmentDoc1\"));",
									"pm.collectionVariables.set(\"path2\",pm.iterationData.get(\"AssignmentDoc2\"));",
									"pm.collectionVariables.set(\"path3\",pm.iterationData.get(\"AssignmentDoc3\"));",
									"pm.collectionVariables.set(\"path4\",pm.iterationData.get(\"AssignmentDoc4\"));",
									"pm.collectionVariables.set(\"path5\",pm.iterationData.get(\"AssignmentDoc5\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d47c745c-144e-4ad0-ab0c-db69175cff75",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assignmentDescription\": \"{{AssignmentDesc}}\",\n  \"assignmentId\": {{assignment_id}},\n \"assignmentName\": \"{{AssignmentName}}\",\n  \"batchId\": {{batch_id}},\n  \"comments\": \"{{Comments}}\",\n  \"createdBy\": \"3204\",\n  \"dueDate\": \"{{$isoTimestamp}}\",\n  \"graderId\": \"U2401\",\n  \"pathAttachment1\": \"{{AssignmentDoc1}}\",\n  \"pathAttachment2\": \"{{AssignmentDoc2}}\",\n  \"pathAttachment3\": \"{{AssignmentDoc3}}\",\n  \"pathAttachment4\": \"{{AssignmentDoc4}}\",\n  \"pathAttachment5\": \"{{AssignmentDoc5}}\"\n   }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/assignments/assignmentId"
					},
					"response": []
				},
				{
					"name": "Delete Assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f8ef23-da0e-421d-8795-039a050732b8",
								"exec": [
									"pm.test(\"Validate the status code is 200\",function()\r",
									"{\r",
									"    pm.response.to.have.status(200);\r",
									"     \r",
									"});\r",
									"\r",
									"pm.test(\"Validate Headers Cookies ResponseTime\" , function()\r",
									"{\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"   \r",
									"})\r",
									"\r",
									"pm.test(\"Validating For successful deletion message\",function()\r",
									"{\r",
									"    pm.expect(jsonData.message).to.eql(\"Assignment deleted successfully\");\r",
									"     pm.expect(jsonData.success).to.eql(true);\r",
									"\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d2a9706e-0f72-4299-814a-d12231db1d60",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignments/:assignmentId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignments",
								":assignmentId"
							],
							"variable": [
								{
									"key": "assignmentId",
									"value": "1873"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Assignment_404NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f8ef23-da0e-421d-8795-039a050732b8",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"No record found With ProgramId\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Assignment not found with Id : 89765\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b6d748a2-a53c-4a05-b71b-edc00ef4967f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignments/:assignmentId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignments",
								":assignmentId"
							],
							"variable": [
								{
									"key": "assignmentId",
									"value": "89765"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "23178020-7d48-4da1-bb71-6a454d58ebd4"
		},
		{
			"name": "Assignment Submit Module",
			"item": [
				{
					"name": "Submit Assignment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1e616165-c6bd-41b4-a155-a25d1bc861aa",
								"exec": [
									"var moment = require('moment');",
									"pm.environment.set(\"grading_date\", moment.utc().subtract(1, 'days').toJSON());",
									"pm.environment.set(\"submission_date\", moment.utc().subtract(7, 'days').toJSON());",
									"",
									"pm.collectionVariables.set(\"submissiondescription\",pm.iterationData.get(\"SubmissionDesc\"));",
									"pm.collectionVariables.set(\"subcomments\",pm.iterationData.get(\"SubmissionComments\"));",
									"pm.collectionVariables.set(\"spath1\",pm.iterationData.get(\"AssignmentSubDoc1\"));",
									"pm.collectionVariables.set(\"spath2\",pm.iterationData.get(\"AssignmentSubDoc2\"));",
									"pm.collectionVariables.set(\"spath3\",pm.iterationData.get(\"AssignmentSubDoc3\"));",
									"pm.collectionVariables.set(\"spath4\",pm.iterationData.get(\"AssignmentSubDoc4\"));",
									"pm.collectionVariables.set(\"spath5\",pm.iterationData.get(\"AssignmentSubDoc5\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3ae0af9c-2d9d-4617-af8d-2894fd209702",
								"exec": [
									"/*const jsonData = pm.response.json();",
									"console.log(jsonData);",
									"const submission_Id = jsonData.submissionId;",
									"pm.environment.set(\"submission_id\",submission_Id);*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a5cb1611-5512-4789-a399-3d057642497b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[    {        \"assignmentId\": {{assignment_id}},\n        \"userId\": \"{{user_id}}\",\n        \"subDesc\": \"{{SubmissionDesc}}\",\n        \"subComments\": \"{{SubmissionComments}}\",\n        \"subPathAttach1\": \"{{AssignmentSubDoc1}}\",\n        \"subPathAttach2\": \"{{AssignmentSubDoc2}}\",\n        \"subPathAttach3\": \"{{AssignmentSubDoc3}}\",\n        \"subPathAttach4\": \"{{AssignmentSubDoc4}}\",\n        \"subPathAttach5\": \"{{AssignmentSubDoc5}}\",\n        \"subDateTime\": \"{{submission_date}}\",\n        \"gradedBy\": \"U3204\",\n        \"gradedDateTime\": \"{{grading_date}}\",\n        \"grade\": 1\n    }]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{BaseURL}}/assignmentsubmission"
					},
					"response": []
				},
				{
					"name": "Get All Submission",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "484ad6f1-6fa4-417c-b3e5-63eb83ad177c",
								"exec": [
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200);",
									"     ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "227a8db7-674c-472d-8878-cb56eeb70b3b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignmentsubmission"
					},
					"response": []
				},
				{
					"name": "GET Grades by Assignment ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97fbe138-47a5-4346-a001-0ad78df55c6c",
								"exec": [
									"pm.test(\"Validate the status code is 200\",function()",
									"{",
									"    pm.response.to.have.status(200);",
									"   ",
									"})",
									"",
									"pm.test(\"Batch id not found\",function()",
									"{",
									"    pm.response.to.have.status(404);  ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c0a5b336-25ff-409d-9c7e-ce1188d1c2b0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignmentsubmission/getGrades/{{assignment_id}}"
					},
					"response": []
				},
				{
					"name": "GET Grades by Assignment ID_404 Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97fbe138-47a5-4346-a001-0ad78df55c6c",
								"exec": [
									"",
									"pm.test(\"Assignments id not found\",function()",
									"{",
									"    pm.response.to.have.status(404);  ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "92cd0038-0d52-4a9c-81e0-0059cbfefb72",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignmentsubmission/getGrades/:assignmentId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignmentsubmission",
								"getGrades",
								":assignmentId"
							],
							"variable": [
								{
									"key": "assignmentId",
									"value": "1325"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Grades by StudentID",
					"id": "db18096b-ead4-4d4b-8698-6bbbfea8a058",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignmentsubmission/getGradesByStudentId/{studentID}"
					},
					"response": []
				},
				{
					"name": "GET Grades by StudentID_404 NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e7e3257-5adc-4e4c-a683-c118b563997e",
								"exec": [
									"pm.test(\"Student id not found\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);  \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d61401c6-fb75-432c-9332-c4ba51611fdc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignmentsubmission/getGradesByStudentId/:studentID",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignmentsubmission",
								"getGradesByStudentId",
								":studentID"
							],
							"variable": [
								{
									"key": "studentID",
									"value": "234"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Grades by BatchID",
					"id": "75d15ca0-9013-4af7-ab75-11cb9f9f2a25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignmentsubmission/grades/{{batch_id}}"
					},
					"response": []
				},
				{
					"name": "GET Grades by BatchID _404 Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae329e3e-ed28-4f68-befe-6f6866503003",
								"exec": [
									"pm.test(\"Student id not found\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);  \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e65d0621-55b8-4016-81d3-e6cb6a39299d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignmentsubmission/grades/:batchId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignmentsubmission",
								"grades",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "4264"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Submission by User ID",
					"id": "0885f64c-9051-4460-b49b-fad06f33d00e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignmentsubmission/student/{{user_id}}"
					},
					"response": []
				},
				{
					"name": "GET Submission by User ID _404 Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "240ddd3c-12bd-4631-b50a-4b81b87998dc",
								"exec": [
									"pm.test(\"Student id not found\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);  \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "458eb5f0-852b-4618-b37a-e323df756dd8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignmentsubmission/student/:userId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignmentsubmission",
								"student",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "U2346"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Submission by batch ID",
					"id": "aa7058da-e70e-4be2-a2b6-02df43960ac8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{BaseURL}}/assignmentsubmission/studentbatch/{{batch_id}}"
					},
					"response": []
				},
				{
					"name": "GET Submission by batch ID_404 Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9427dfed-c5e2-46e2-9bb0-9b2811cd87cc",
								"exec": [
									"pm.test(\"Student id not found\",function()\r",
									"{\r",
									"    pm.response.to.have.status(404);  \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cb7750a6-2a9a-4800-a171-ac5b3ef9cccc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/assignmentsubmission/studentbatch/:batchId",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"assignmentsubmission",
								"studentbatch",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "8a9e4171-5be5-4a0d-a0bd-7d7878df878f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{BaseURL}}/assignmentsubmission/{Id}"
					},
					"response": []
				}
			],
			"id": "0d4c9965-a5ed-47f0-8b49-3b33ef7f2fa3"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "eac7048a-69c1-46e0-a6a1-e2f37e73bc1d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e3a3da3b-604d-41e6-8b95-2553fd0e4d02",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "47eb28f7-7c4f-4c85-a312-e1abad4b2b36",
			"key": "user_FirstName",
			"value": ""
		},
		{
			"id": "630bd222-a055-4837-b3d8-40e53f18d10e",
			"key": "user_LastName",
			"value": ""
		},
		{
			"id": "171691b5-6761-4bc9-81b0-9be556fd6e70",
			"key": "Role_Id",
			"value": ""
		},
		{
			"id": "f4a91a87-b3e2-4fac-a309-b1fdeb914b0f",
			"key": "user_PhoneNumber",
			"value": ""
		},
		{
			"id": "e5ea0e60-0c2d-4f78-83b4-0a3e49b313b6",
			"key": "user_RoleStatus",
			"value": ""
		},
		{
			"id": "4711642f-f5a5-434d-a5fd-60d2d5fb51b4",
			"key": "user_TimeZone",
			"value": ""
		},
		{
			"id": "1006455f-d6ee-4da2-b342-6f66bfa2aa3a",
			"key": "user_VisaStatus",
			"value": ""
		},
		{
			"id": "bf8e324e-7445-4211-98d7-49de3c1d5480",
			"key": "user_EduPg",
			"value": ""
		},
		{
			"id": "b3273b54-eb10-4bed-945d-009db9ee0006",
			"key": "user_EduUg",
			"value": ""
		},
		{
			"id": "98b564e3-0753-4683-84e1-e6a5fa1a8d9f",
			"key": "assignmentdescription",
			"value": ""
		},
		{
			"id": "6f19d909-9d77-466d-babb-892d9b491b90",
			"key": "assignment_name",
			"value": ""
		},
		{
			"id": "2e79a040-2b75-4a5a-9647-65961582b498",
			"key": "batch_id",
			"value": "",
			"disabled": true
		},
		{
			"id": "8bee3d8e-2ac4-4f35-84be-047e147e6363",
			"key": "comments",
			"value": ""
		},
		{
			"id": "bafc7c64-a9e0-4fc4-bd80-ed62dff8828c",
			"key": "duedate",
			"value": ""
		},
		{
			"id": "6b2b09c3-418e-4839-933f-812e73b6d6bd",
			"key": "graderId",
			"value": ""
		},
		{
			"id": "8c3f54bf-220f-4b41-b720-10bf7e37bb0f",
			"key": "path1",
			"value": ""
		},
		{
			"id": "49750dec-6ab8-4eb3-a23f-eb939133c7b5",
			"key": "path2",
			"value": ""
		},
		{
			"id": "6e87889a-c58a-4be4-b694-0ec99ea8a058",
			"key": "path3",
			"value": ""
		},
		{
			"id": "e69ae491-3249-47de-b0b0-1ce8f0a8fa15",
			"key": "path4",
			"value": ""
		},
		{
			"id": "6f442e9e-f8c8-435a-8771-ea4c8bdfe6eb",
			"key": "path5",
			"value": ""
		},
		{
			"id": "938ea442-5103-46b7-aa16-a9f8b79ccac6",
			"key": "prog_name",
			"value": ""
		},
		{
			"id": "19f70a15-f7d5-4a0c-90aa-1debbb5dc9f0",
			"key": "prog_desc",
			"value": ""
		},
		{
			"id": "4f189a7c-b3fe-4b0b-9658-ab059dcfa3a6",
			"key": "prog_status",
			"value": ""
		},
		{
			"id": "8b7681da-7f7b-4c8f-a46f-5b634963d160",
			"key": "batch_name",
			"value": "",
			"type": "string"
		},
		{
			"id": "aad720d3-e7d8-4610-8324-00fb0faf73a2",
			"key": "batch_status",
			"value": "",
			"type": "string"
		},
		{
			"id": "8b3f70be-5f7c-445e-8eff-db913643c7fe",
			"key": "noOf_classes",
			"value": "",
			"type": "string"
		},
		{
			"id": "10e42dd4-2c80-4808-8ee2-2bc847adaa2c",
			"key": "serialNumber",
			"value": "",
			"type": "string"
		},
		{
			"id": "c24e0314-6986-41c0-b175-5c10dded2688",
			"key": "batch_desc",
			"value": "",
			"type": "string"
		},
		{
			"id": "7ba8b2a2-0908-49f4-aa5e-3ba6bdb966c6",
			"key": "Role_status",
			"value": ""
		},
		{
			"id": "d9b0a667-6af4-471a-a6af-464d39b014ae",
			"key": "Phone_Number",
			"value": ""
		},
		{
			"id": "68730a07-7303-4220-92e0-38a909e9ef15",
			"key": "submissiondescription",
			"value": ""
		},
		{
			"id": "ef72bfc9-fa33-49d2-b734-63a7291cc6ae",
			"key": "subcomments",
			"value": ""
		},
		{
			"id": "6578f639-4156-488a-b761-fccca47d61ec",
			"key": "spath1",
			"value": ""
		},
		{
			"id": "0081a34b-92de-4dd8-9b21-5d9c13630934",
			"key": "spath2",
			"value": ""
		},
		{
			"id": "d19b3646-14fe-404c-acc5-e0815731dccd",
			"key": "spath3",
			"value": ""
		},
		{
			"id": "176eda89-5c14-4cff-98ef-e75cba466ae2",
			"key": "spath4",
			"value": ""
		},
		{
			"id": "4585d48b-994e-4c9d-acfc-edab86382b9f",
			"key": "spath5",
			"value": ""
		}
	]
}